[1mdiff --git a/script.js b/script.js[m
[1mindex 36ac9fa..d80beb0 100644[m
[1m--- a/script.js[m
[1m+++ b/script.js[m
[36m@@ -24,7 +24,9 @@[m
     conversionTagLabel: 'conversion', // Tag for konverteringer[m
     paddingSides: 18, // Padding i px p√• hver side av widgeten[m
     injectMode: 'before', // 'before', 'after', eller 'append' for desktop[m
[31m-    requireProductName: true // Krever at et produktnavn finnes p√• siden for desktop injisering[m
[32m+[m[32m    requireProductName: true, // Krever at et produktnavn finnes p√• siden for desktop injisering[m
[32m+[m[32m    animationDuration: 300, // Varighet for animasjonen i millisekunder[m
[32m+[m[32m    waitForButtons: true // Venter p√• at knappene er lastet f√∏r widgeten vises[m
   };[m
   [m
   // Globale variabler for √• holde styr p√• widgetstatus[m
[36m@@ -46,6 +48,7 @@[m
 [m
   // Legg til en variabel for √• spore om bredden er satt[m
   let containerWidthIsFixed = false;[m
[32m+[m[32m  let buttonsLoaded = false; // Indikerer om knappene er lastet inn[m
 [m
   // Enkel logging kun til konsoll[m
   function log(message) {[m
[36m@@ -146,37 +149,55 @@[m
   // Hjelpefunksjon: Setter widget-containerens max-width basert p√• foreldreelementet, men kun √©n gang[m
   function updateContainerMaxWidth() {[m
     try {[m
[31m-      if (!activeWidget || !activeWidget.shadowRoot || containerWidthIsFixed) return;[m
[32m+[m[32m      if (!activeWidget || containerWidthIsFixed) return;[m
       [m
[31m-      const container = activeWidget.shadowRoot.querySelector('.chat-container');[m
[31m-      if (!container) return;[m
[32m+[m[32m      // Finn m√•lcontaineren[m
[32m+[m[32m      const targetSelector = getTargetSelector();[m
[32m+[m[32m      const targetContainer = document.querySelector(targetSelector);[m
       [m
[31m-      const windowWidth = window.innerWidth;[m
[31m-      const isMobileView = windowWidth < config.breakpoint;[m
[32m+[m[32m      if (!targetContainer) {[m
[32m+[m[32m        log(`Target container ${targetSelector} not found when updating width`);[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
       [m
[31m-      // Finn foreldre-element og dets st√∏rrelse[m
[31m-      const parent = activeWidget.parentElement;[m
[31m-      if (!parent) return;[m
[32m+[m[32m      // Beregn bredden basert p√• m√•lcontaineren[m
[32m+[m[32m      const targetWidth = targetContainer.offsetWidth;[m
[32m+[m[32m      const widgetWidth = targetWidth + (config.paddingSides * 2); // Legg til padding p√• begge sider (18px x 2)[m
       [m
[31m-      const parentWidth = parent.offsetWidth;[m
[32m+[m[32m      // Finn shadow root eller direkte container[m
[32m+[m[32m      let container = null;[m
[32m+[m[32m      if (activeWidget.shadowRoot) {[m
[32m+[m[32m        container = activeWidget.shadowRoot.querySelector('.chat-container');[m
[32m+[m[32m      } else {[m
[32m+[m[32m        container = activeWidget.querySelector('.chat-container');[m
[32m+[m[32m      }[m
       [m
[31m-      // Beregn bredden basert p√• foreldreelementet pluss konfigurerbar padding p√• hver side[m
[31m-      let containerWidth = parentWidth - (config.paddingSides * 2);[m
[31m-      let containerMaxWidth = containerWidth + 'px';[m
[32m+[m[32m      if (!container) {[m
[32m+[m[32m        log('Chat container not found when updating width');[m
[32m+[m[32m        return;[m
[32m+[m[32m      }[m
       [m
[31m-      // Sett widgetens bredde √©n gang og marker som l√•st[m
[31m-      console.log(`L√•ser widget-bredde til ${containerMaxWidth} basert p√• foreldreelement (${parentWidth}px minus ${config.paddingSides * 2}px padding)`);[m
[31m-      container.style.width = containerMaxWidth;[m
[31m-      container.style.maxWidth = containerMaxWidth;[m
[32m+[m[32m      // Sett fast bredde og sentrering[m
[32m+[m[32m      log(`Setter widget-bredde til ${widgetWidth}px (m√•lcontainer ${targetWidth}px + ${config.paddingSides * 2}px padding)`);[m
[32m+[m[32m      container.style.width = `${widgetWidth}px`;[m
[32m+[m[32m      container.style.maxWidth = `${widgetWidth}px`;[m
[32m+[m[32m      container.style.margin = '0 auto';[m
[32m+[m[41m      [m
[32m+[m[32m      // Oppdater ogs√• karusellcontainere for √• f√∏lge samme bredde[m
[32m+[m[32m      let allContainers = [];[m
[32m+[m[32m      if (activeWidget.shadowRoot) {[m
[32m+[m[32m        allContainers = activeWidget.shadowRoot.querySelectorAll('.carousel-view, .chat-interface, .chat-messages-container');[m
[32m+[m[32m      } else {[m
[32m+[m[32m        allContainers = activeWidget.querySelectorAll('.carousel-view, .chat-interface, .chat-messages-container');[m
[32m+[m[32m      }[m
       [m
[31m-      // Oppdater ogs√• karusell-containere for √• f√∏lge samme bredde[m
[31m-      const allContainers = activeWidget.shadowRoot.querySelectorAll('.carousel-view, .chat-interface, .chat-messages-container');[m
       allContainers.forEach(element => {[m
[31m-        element.style.width = containerMaxWidth;[m
[31m-        element.style.maxWidth = containerMaxWidth;[m
[32m+[m[32m        element.style.width = `${widgetWidth}px`;[m
[32m+[m[32m        element.style.maxWidth = `${widgetWidth}px`;[m
[32m+[m[32m        element.style.boxSizing = 'border-box';[m
       });[m
       [m
[31m-      // Merk at bredden n√• er l√•st og ikke skal endres[m
[32m+[m[32m      // Merk at bredden n√• er l√•st[m
       containerWidthIsFixed = true;[m
     } catch (error) {[m
       console.error('Feil ved innstilling av container st√∏rrelse:', error);[m
[36m@@ -204,154 +225,117 @@[m
   [m
   // Finn om produkt_navn kan hentes fra siden[m
   function canFindProductName() {[m
[31m-    if (!config.requireProductName) return true;[m
[31m-    [m
[31m-    // Pr√∏v √• finne produktnavnet p√• siden[m
[31m-    const productTitle = document.querySelector('h1');[m
[31m-    if (productTitle && productTitle.textContent?.trim()) {[m
[31m-      return true;[m
[31m-    }[m
[32m+[m[32m    // Bruk scrapeScript-metoden for produktnavn[m
[32m+[m[32m    const productNameElem = document.querySelector('.product-header__title');[m
[32m+[m[32m    const productName = productNameElem ? productNameElem.textContent.trim() : '';[m
     [m
[31m-    // Pr√∏v meta-tags[m
[31m-    const metaTitle = document.querySelector('meta[property="og:title"]');[m
[31m-    if (metaTitle && metaTitle.getAttribute('content')?.trim()) {[m
[32m+[m[32m    if (productName) {[m
[32m+[m[32m      log(`Fant produktnavn: ${productName}`);[m
       return true;[m
     }[m
     [m
[31m-    // Pr√∏v produkttitler i ulike formater[m
[31m-    const productTitles = document.querySelectorAll('.product-title, .product-name, .product_title, .product_name');[m
[31m-    for (const title of productTitles) {[m
[31m-      if (title.textContent?.trim()) {[m
[31m-        return true;[m
[31m-      }[m
[31m-    }[m
[31m-    [m
[31m-    // Ingen produktnavn funnet[m
[32m+[m[32m    log('Ingen produktnavn funnet p√• siden');[m
     return false;[m
   }[m
   [m
   // Finn target-elementet og sett inn widget-containeren[m
   function setupContainer() {[m
[31m-    log('Setting up widget container');[m
[31m-    addGlobalStyles();[m
[31m-    [m
[31m-    const activeSelector = getTargetSelector();[m
[31m-    const isMobile = window.innerWidth < config.breakpoint;[m
[31m-    log(`Bruker selektor: ${activeSelector} for n√•v√¶rende skjermst√∏rrelse (${window.innerWidth}px)`);[m
[32m+[m[32m    log('Setting up container');[m
     [m
[31m-    // For desktop, sjekk om produktnavnet kan hentes[m
[31m-    if (!isMobile && config.requireProductName && !canFindProductName()) {[m
[31m-      log('Produktnavn kan ikke hentes, hopper over injisering av widget p√• desktop');[m
[31m-      return false;[m
[32m+[m[32m    // Sjekk om container allerede finnes[m
[32m+[m[32m    let container = document.getElementById(config.containerID);[m
[32m+[m[32m    if (container)